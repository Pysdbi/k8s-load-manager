@startuml classes_diagram.puml
' Диаграмма классов для ASO (Auto Scaling Operator)

' Основные интерфейсы
interface MetricsMonitor {
  +CollectMetrics() []Metric
}

interface ScalingModule {
  +AnalyzeMetrics([]Metric) ScalingDecision
  +ApplyScaling(ScalingDecision) error
}

interface NotificationSystem {
  +SendScalingNotification(ScalingEvent)
}

' Основной класс оператора
class AutoScalingOperator {
  -metricsMonitor MetricsMonitor
  -scalingModule ScalingModule
  -notificationSystem NotificationSystem
  -stopChan chan struct{}
  +NewAutoScalingOperator(\n\
    MetricsMonitor,\n\
    ScalingModule,\n\
    NotificationSystem\n ) *AutoScalingOperator
  +Run()
  +Stop()
}

' Конфигурация оператора
class OperatorConfig {
  -scalingRules []ScalingRule
  -notificationConfig NotificationConfig
  -metricsConfig MetricsConfig
}

' Конфигурация метрик
class MetricsConfig {
  -interval int
  -thresholds map[string]float64
  -endpoints []string
}

' Конфигурация уведомлений
class NotificationConfig {
  -channels []string
  -templates map[string]string
  -retryCount int
}

' Реализации интерфейсов
class SimpleMetricsMonitor {
  +CollectMetrics() []Metric
}

class SimpleScalingModule {
  +AnalyzeMetrics([]Metric) ScalingDecision
  +ApplyScaling(ScalingDecision) error
}

class SimpleNotificationSystem {
  +SendScalingNotification(ScalingEvent)
}

' Связи
AutoScalingOperator *-- MetricsMonitor : "композиция"
AutoScalingOperator *-- ScalingModule : "композиция"
AutoScalingOperator *-- NotificationSystem : "композиция"

OperatorConfig ..> SimpleMetricsMonitor : "зависимость"
OperatorConfig ..> SimpleScalingModule : "зависимость"
OperatorConfig ..> SimpleNotificationSystem : "зависимость"

SimpleMetricsMonitor ..|> MetricsMonitor : "реализация"
SimpleScalingModule ..|> ScalingModule : "реализация"
SimpleNotificationSystem ..|> NotificationSystem : "реализация"

OperatorConfig --> AutoScalingOperator : "ассоциация"

MetricsConfig --|> OperatorConfig : "наследование"
NotificationConfig --|> OperatorConfig : "наследование"

@enduml
